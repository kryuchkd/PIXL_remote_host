{"ast":null,"code":"/**\r\n * Helper class to handle QR Code symbol modules\r\n *\r\n * @param {Number} size Symbol size\r\n */\nfunction BitMatrix(size) {\n  if (!size || size < 1) {\n    throw new Error('BitMatrix size must be defined and greater than 0');\n  }\n\n  this.size = size;\n  this.data = new Uint8Array(size * size);\n  this.reservedBit = new Uint8Array(size * size);\n}\n/**\r\n * Set bit value at specified location\r\n * If reserved flag is set, this bit will be ignored during masking process\r\n *\r\n * @param {Number}  row\r\n * @param {Number}  col\r\n * @param {Boolean} value\r\n * @param {Boolean} reserved\r\n */\n\n\nBitMatrix.prototype.set = function (row, col, value, reserved) {\n  const index = row * this.size + col;\n  this.data[index] = value;\n  if (reserved) this.reservedBit[index] = true;\n};\n/**\r\n * Returns bit value at specified location\r\n *\r\n * @param  {Number}  row\r\n * @param  {Number}  col\r\n * @return {Boolean}\r\n */\n\n\nBitMatrix.prototype.get = function (row, col) {\n  return this.data[row * this.size + col];\n};\n/**\r\n * Applies xor operator at specified location\r\n * (used during masking process)\r\n *\r\n * @param {Number}  row\r\n * @param {Number}  col\r\n * @param {Boolean} value\r\n */\n\n\nBitMatrix.prototype.xor = function (row, col, value) {\n  this.data[row * this.size + col] ^= value;\n};\n/**\r\n * Check if bit at specified location is reserved\r\n *\r\n * @param {Number}   row\r\n * @param {Number}   col\r\n * @return {Boolean}\r\n */\n\n\nBitMatrix.prototype.isReserved = function (row, col) {\n  return this.reservedBit[row * this.size + col];\n};\n\nmodule.exports = BitMatrix;","map":{"version":3,"names":["BitMatrix","size","Error","data","Uint8Array","reservedBit","prototype","set","row","col","value","reserved","index","get","xor","isReserved","module","exports"],"sources":["C:/Users/Maddi/Documents/GitHub/PIXL/node_modules/qrcode/lib/core/bit-matrix.js"],"sourcesContent":["/**\r\n * Helper class to handle QR Code symbol modules\r\n *\r\n * @param {Number} size Symbol size\r\n */\r\nfunction BitMatrix (size) {\r\n  if (!size || size < 1) {\r\n    throw new Error('BitMatrix size must be defined and greater than 0')\r\n  }\r\n\r\n  this.size = size\r\n  this.data = new Uint8Array(size * size)\r\n  this.reservedBit = new Uint8Array(size * size)\r\n}\r\n\r\n/**\r\n * Set bit value at specified location\r\n * If reserved flag is set, this bit will be ignored during masking process\r\n *\r\n * @param {Number}  row\r\n * @param {Number}  col\r\n * @param {Boolean} value\r\n * @param {Boolean} reserved\r\n */\r\nBitMatrix.prototype.set = function (row, col, value, reserved) {\r\n  const index = row * this.size + col\r\n  this.data[index] = value\r\n  if (reserved) this.reservedBit[index] = true\r\n}\r\n\r\n/**\r\n * Returns bit value at specified location\r\n *\r\n * @param  {Number}  row\r\n * @param  {Number}  col\r\n * @return {Boolean}\r\n */\r\nBitMatrix.prototype.get = function (row, col) {\r\n  return this.data[row * this.size + col]\r\n}\r\n\r\n/**\r\n * Applies xor operator at specified location\r\n * (used during masking process)\r\n *\r\n * @param {Number}  row\r\n * @param {Number}  col\r\n * @param {Boolean} value\r\n */\r\nBitMatrix.prototype.xor = function (row, col, value) {\r\n  this.data[row * this.size + col] ^= value\r\n}\r\n\r\n/**\r\n * Check if bit at specified location is reserved\r\n *\r\n * @param {Number}   row\r\n * @param {Number}   col\r\n * @return {Boolean}\r\n */\r\nBitMatrix.prototype.isReserved = function (row, col) {\r\n  return this.reservedBit[row * this.size + col]\r\n}\r\n\r\nmodule.exports = BitMatrix\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,CAAoBC,IAApB,EAA0B;EACxB,IAAI,CAACA,IAAD,IAASA,IAAI,GAAG,CAApB,EAAuB;IACrB,MAAM,IAAIC,KAAJ,CAAU,mDAAV,CAAN;EACD;;EAED,KAAKD,IAAL,GAAYA,IAAZ;EACA,KAAKE,IAAL,GAAY,IAAIC,UAAJ,CAAeH,IAAI,GAAGA,IAAtB,CAAZ;EACA,KAAKI,WAAL,GAAmB,IAAID,UAAJ,CAAeH,IAAI,GAAGA,IAAtB,CAAnB;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAD,SAAS,CAACM,SAAV,CAAoBC,GAApB,GAA0B,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,KAApB,EAA2BC,QAA3B,EAAqC;EAC7D,MAAMC,KAAK,GAAGJ,GAAG,GAAG,KAAKP,IAAX,GAAkBQ,GAAhC;EACA,KAAKN,IAAL,CAAUS,KAAV,IAAmBF,KAAnB;EACA,IAAIC,QAAJ,EAAc,KAAKN,WAAL,CAAiBO,KAAjB,IAA0B,IAA1B;AACf,CAJD;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAZ,SAAS,CAACM,SAAV,CAAoBO,GAApB,GAA0B,UAAUL,GAAV,EAAeC,GAAf,EAAoB;EAC5C,OAAO,KAAKN,IAAL,CAAUK,GAAG,GAAG,KAAKP,IAAX,GAAkBQ,GAA5B,CAAP;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAT,SAAS,CAACM,SAAV,CAAoBQ,GAApB,GAA0B,UAAUN,GAAV,EAAeC,GAAf,EAAoBC,KAApB,EAA2B;EACnD,KAAKP,IAAL,CAAUK,GAAG,GAAG,KAAKP,IAAX,GAAkBQ,GAA5B,KAAoCC,KAApC;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAV,SAAS,CAACM,SAAV,CAAoBS,UAApB,GAAiC,UAAUP,GAAV,EAAeC,GAAf,EAAoB;EACnD,OAAO,KAAKJ,WAAL,CAAiBG,GAAG,GAAG,KAAKP,IAAX,GAAkBQ,GAAnC,CAAP;AACD,CAFD;;AAIAO,MAAM,CAACC,OAAP,GAAiBjB,SAAjB"},"metadata":{},"sourceType":"script"}