{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maddi\\\\Documents\\\\GitHub\\\\PIXL\\\\src\\\\components\\\\ListForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\n/* this is the basic structure of the list: enter field and button */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListForm(props) {\n  _s();\n\n  const [input, setInput] = useState('');\n  /*so it doesn't refresh everytime */\n\n  const handleSubmit = refresh => {\n    refresh.preventDefault();\n\n    const handleChange = change => {\n      setInput(change.target.value);\n    };\n\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"listForm\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a link!\",\n      value: input,\n      name: \"text\",\n      className: \"\",\n      todoInput: true,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"addButton\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ListForm, \"WVveI0ACa0LqOSOlGzu58xcz+KE=\");\n\n_c = ListForm;\nexport default ListForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListForm\");","map":{"version":3,"names":["React","useState","ListForm","props","input","setInput","handleSubmit","refresh","preventDefault","handleChange","change","target","value","onSubmit","id","Math","floor","random","text"],"sources":["C:/Users/Maddi/Documents/GitHub/PIXL/src/components/ListForm.js"],"sourcesContent":["import React, {useState} from 'react'\r\n\r\n/* this is the basic structure of the list: enter field and button */\r\nfunction ListForm(props) {\r\n    const[input, setInput] = useState('')\r\n\r\n    /*so it doesn't refresh everytime */\r\n    const handleSubmit = refresh => {\r\n      refresh.preventDefault();\r\n\r\n      const handleChange= change => {\r\n        setInput(change.target.value)\r\n      }\r\n  \r\n      props.onSubmit({\r\n        id: Math.floor(Math.random() * 10000), \r\n        text:input\r\n    })\r\n  }\r\n\r\n  return (\r\n    <form className='listForm' onSubmit={handleSubmit}>\r\n        <input \r\n          type=\"text\" \r\n          placeholder='Add a link!' \r\n          value={input}\r\n          name=\"text\" \r\n          className=''todoInput\r\n          onChange={handleChange}\r\n        />\r\n        <button className='addButton'>Add</button>\r\n    </form>\r\n  )\r\n\r\n}\r\nexport default ListForm"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA;;;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAAA;;EACrB,MAAK,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAjC;EAEA;;EACA,MAAMK,YAAY,GAAGC,OAAO,IAAI;IAC9BA,OAAO,CAACC,cAAR;;IAEA,MAAMC,YAAY,GAAEC,MAAM,IAAI;MAC5BL,QAAQ,CAACK,MAAM,CAACC,MAAP,CAAcC,KAAf,CAAR;IACD,CAFD;;IAIAT,KAAK,CAACU,QAAN,CAAe;MACbC,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,CADS;MAEbC,IAAI,EAACd;IAFQ,CAAf;EAIH,CAXC;;EAaF,oBACE;IAAM,SAAS,EAAC,UAAhB;IAA2B,QAAQ,EAAEE,YAArC;IAAA,wBACI;MACE,IAAI,EAAC,MADP;MAEE,WAAW,EAAC,aAFd;MAGE,KAAK,EAAEF,KAHT;MAIE,IAAI,EAAC,MAJP;MAKE,SAAS,EAAC,EALZ;MAKc,SAAS,MALvB;MAME,QAAQ,EAAEK;IANZ;MAAA;MAAA;MAAA;IAAA,QADJ,eASI;MAAQ,SAAS,EAAC,WAAlB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QATJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD;;GA/BQP,Q;;KAAAA,Q;AAgCT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}