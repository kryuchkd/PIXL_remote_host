{"ast":null,"code":"var _jsxFileName = \"/Users/madelinespawn/Desktop/PIXL/src/components/Todo.js\",\n    _s = $RefreshSig$();\n\n/* crediting github: briancodex for to do functionality used his components\nfrom https://github.com/briancodex/react-todo-app-v1 for to do section of this\nreact app */\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport TodoForm from './TodoForm';\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todo = _ref => {\n  _s();\n\n  let {\n    todos,\n    completeTodo,\n    updateTodo\n  } = _ref;\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n\n  const submitUpdate = value => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n\n  if (edit.id) {\n    return /*#__PURE__*/_jsxDEV(TodoForm, {\n      edit: edit,\n      onSubmit: submitUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n\n  return todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: todo.isComplete ? 'todo-row complete' : 'todo-row',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => completeTodo(todo.id),\n      children: todo.text\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this));\n};\n\n_s(Todo, \"7cPLGZ4sx9+3j3aogJOtp4xOXpo=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["ReactDOM","BrowserRouter","Router","Route","Link","TodoForm","React","useState","Todo","todos","completeTodo","updateTodo","edit","setEdit","id","value","submitUpdate","map","todo","index","isComplete","text"],"sources":["/Users/madelinespawn/Desktop/PIXL/src/components/Todo.js"],"sourcesContent":["/* crediting github: briancodex for to do functionality used his components\nfrom https://github.com/briancodex/react-todo-app-v1 for to do section of this\nreact app */\n\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport TodoForm from './TodoForm';\nimport React, {useState} from \"react\";\n\nconst Todo = ({todos, completeTodo, updateTodo }) => {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n\n  const submitUpdate = value => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n\n  if (edit.id) {\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\n  }\n\n  return todos.map((todo, index) => (\n    <div\n      className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\n      key={index}\n    >\n      <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n        {todo.text}\n      </div>\n    </div>\n  ));\n};\n\nexport default Todo;\n"],"mappings":";;;AAAA;AACA;AACA;AAEA,OAAOA,QAAP,MAAqB,WAArB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,QAAqD,kBAArD;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,MAAMC,IAAI,GAAG,QAAwC;EAAA;;EAAA,IAAvC;IAACC,KAAD;IAAQC,YAAR;IAAsBC;EAAtB,CAAuC;EACnD,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC;IAC/BO,EAAE,EAAE,IAD2B;IAE/BC,KAAK,EAAE;EAFwB,CAAD,CAAhC;;EAKA,MAAMC,YAAY,GAAGD,KAAK,IAAI;IAC5BJ,UAAU,CAACC,IAAI,CAACE,EAAN,EAAUC,KAAV,CAAV;IACAF,OAAO,CAAC;MACNC,EAAE,EAAE,IADE;MAENC,KAAK,EAAE;IAFD,CAAD,CAAP;EAID,CAND;;EAQA,IAAIH,IAAI,CAACE,EAAT,EAAa;IACX,oBAAO,QAAC,QAAD;MAAU,IAAI,EAAEF,IAAhB;MAAsB,QAAQ,EAAEI;IAAhC;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,OAAOP,KAAK,CAACQ,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACf;IACE,SAAS,EAAED,IAAI,CAACE,UAAL,GAAkB,mBAAlB,GAAwC,UADrD;IAAA,uBAIE;MAAmB,OAAO,EAAE,MAAMV,YAAY,CAACQ,IAAI,CAACJ,EAAN,CAA9C;MAAA,UACGI,IAAI,CAACG;IADR,GAAUH,IAAI,CAACJ,EAAf;MAAA;MAAA;MAAA;IAAA;EAJF,GAEOK,KAFP;IAAA;IAAA;IAAA;EAAA,QADK,CAAP;AAUD,CA5BD;;GAAMX,I;;KAAAA,I;AA8BN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}