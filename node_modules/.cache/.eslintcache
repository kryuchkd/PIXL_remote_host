[{"C:\\Users\\danil\\Documents\\GitHub\\PIXL_remote_host\\src\\index.js":"1","C:\\Users\\danil\\Documents\\GitHub\\PIXL_remote_host\\src\\App.js":"2","C:\\Users\\danil\\Documents\\GitHub\\PIXL_remote_host\\src\\reportWebVitals.js":"3","C:\\Users\\danil\\Documents\\GitHub\\PIXL_remote_host\\src\\components\\TodoList.js":"4","C:\\Users\\danil\\Documents\\GitHub\\PIXL_remote_host\\src\\components\\ReviewState.js":"5","C:\\Users\\danil\\Documents\\GitHub\\PIXL_remote_host\\src\\components\\AboutUs.jsx":"6","C:\\Users\\danil\\Documents\\GitHub\\PIXL_remote_host\\src\\components\\NavBar.jsx":"7","C:\\Users\\danil\\Documents\\GitHub\\PIXL_remote_host\\src\\components\\IntroPage.jsx":"8","C:\\Users\\danil\\Documents\\GitHub\\PIXL_remote_host\\src\\components\\Todo.js":"9","C:\\Users\\danil\\Documents\\GitHub\\PIXL_remote_host\\src\\components\\TodoForm.js":"10"},{"size":856,"mtime":1665347112009,"results":"11","hashOfConfig":"12"},{"size":1027,"mtime":1665347813715,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1665341380306,"results":"14","hashOfConfig":"12"},{"size":1953,"mtime":1665341380304,"results":"15","hashOfConfig":"12"},{"size":1336,"mtime":1665341380303,"results":"16","hashOfConfig":"12"},{"size":3028,"mtime":1665341380302,"results":"17","hashOfConfig":"12"},{"size":784,"mtime":1665345971160,"results":"18","hashOfConfig":"12"},{"size":1179,"mtime":1665341380302,"results":"19","hashOfConfig":"12"},{"size":1006,"mtime":1665341380303,"results":"20","hashOfConfig":"12"},{"size":1608,"mtime":1665341380304,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mctak3",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\danil\\Documents\\GitHub\\PIXL_remote_host\\src\\index.js",[],[],"C:\\Users\\danil\\Documents\\GitHub\\PIXL_remote_host\\src\\App.js",[],[],"C:\\Users\\danil\\Documents\\GitHub\\PIXL_remote_host\\src\\reportWebVitals.js",[],[],"C:\\Users\\danil\\Documents\\GitHub\\PIXL_remote_host\\src\\components\\TodoList.js",["57","58","59"],[],"/* crediting github: briancodex for to do functionality used his components\r\nfrom https://github.com/briancodex/react-todo-app-v1 for to do section of this\r\nreact app */\r\n\r\nimport React, {useState} from \"react\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport TodoForm from './TodoForm';\r\nimport Todo from './Todo';\r\nimport ReviewState from \"./ReviewState\";\r\n\r\nconst data = []\r\n\r\nfunction TodoList() {\r\n  const [todos, setTodos] = useState([]);\r\n  const navigate = useNavigate()\r\n\r\n  const addTodo = todo => {\r\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n      return;\r\n    }\r\n\r\n    const newTodos = [todo, ...todos];\r\n    data.push(todo)\r\n\r\n    setTodos(newTodos);\r\n    console.log(...todos);\r\n  };\r\n\r\n  const updateTodo = (todoId, newValue) => {\r\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n      return;\r\n    }\r\n\r\n    setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\r\n  };\r\n\r\n  const removeTodo = id => {\r\n    const removedArr = [...todos].filter(todo => todo.id !== id);\r\n\r\n    setTodos(removedArr);\r\n  };\r\n\r\n\r\n  const openInNewTab = url => {\r\n    window.open(url, '_blank', 'noopener,noreferrer');\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      <div\r\n       style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n      }}\r\n      >\r\n        <h1>Add your link!</h1>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n          }}\r\n        >\r\n          <TodoForm onSubmit={addTodo} />\r\n        </div>\r\n        <Todo\r\n          todos={todos}\r\n          removeTodo={removeTodo}\r\n          updateTodo={updateTodo}\r\n        />\r\n\r\n        \r\n        <Link to=\"/review\" state={{data}}>\r\n            <button className=\"review\">\r\n                  Review \r\n            </button>\r\n          </Link>\r\n    </>\r\n  );\r\n}\r\nexport {data};\r\nexport default TodoList;\r\n","C:\\Users\\danil\\Documents\\GitHub\\PIXL_remote_host\\src\\components\\ReviewState.js",["60","61"],[],"import React, {useState}  from 'react'\r\nimport TodoList from './TodoList';\r\nimport QRCode from 'qrcode';\r\nimport {data} from \"./TodoList\";\r\n\r\n\r\n\r\nfunction ReviewState() {\r\n  console.log({data})\r\n\r\n  const[qrcode, setQrcode] = useState('')\r\n  const CreateQRCode = () =>{\r\n    QRCode.toDataURL('http://localhost:3000/review',{\r\n      width: 500,\r\n      margin: 3\r\n    },(err,url) => {\r\n      setQrcode(url)\r\n    })\r\n  }\r\n    return (\r\n      <div>\r\n        <div\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              alignItems: 'center'\r\n            }}\r\n        >\r\n          <h1>QR Codes</h1>\r\n        </div>\r\n          {\r\n          data.map(data=> <ul className=\"links\"><a className=\"link\" href={data.text} target=\"_blank\" rel=\"noopener noreferrer\">{data.text}</a></ul>)}\r\n          \r\n          \r\n          <button className='QRCodeButton' onClick={CreateQRCode}>Generate</button>\r\n          <br></br>\r\n          <div>\r\n            {qrcode && <> \r\n            <img className=\"qrCodeImg\"src={qrcode}/>\r\n              <br></br>\r\n              <button className=\"review\">\r\n                <a href={qrcode} download=\"qrcode.png\"> Download</a>\r\n              </button>     \r\n            \r\n              </>}\r\n            </div>\r\n      </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default ReviewState","C:\\Users\\danil\\Documents\\GitHub\\PIXL_remote_host\\src\\components\\AboutUs.jsx",["62","63","64"],[],"import React, {Component} from \"react\";\r\nimport toggle from 'react-toggle'\r\n\r\nconst options =  [, 'How Does it work?', 'What are the goals?', 'Flexibility']\r\nclass AboutUs extends Component {\r\n    state = {  } \r\n    render() { \r\n        return (\r\n                <div>\r\n                    <h1 className=\"aboutush\">How we got started:</h1>\r\n                        <p className=\"aboutusp\">\r\n                        We noticed that social media and social justice have been intersecting more and more\r\n                        especially with shareable resources and places to get involved. In addition, it's becoming more\r\n                        and more common that content creators are putting charities and causes they support in bios or even\r\n                        featuring them on streams. \r\n                        <br></br>\r\n                        <br></br>\r\n\r\n                        As a result we wanted to create something that would allow frequent and easy sharing and spreading of causes\r\n                        and resources that also allowed a person to create a snapshot of their own personal affiliations, beliefs, and \r\n                        issues that they cared about.\r\n                        </p>\r\n\r\n\r\n\r\n                    <h1 className=\"aboutush\">How Does it work?</h1>\r\n                        <p className=\"aboutusp\">\r\n                        The user goes onto a list creator and inputs the links to resources they want to be present when someone scans\r\n                        their QR code. Then they review their final list and generate a QR code if it looks good! They then can share this QR code\r\n                        to whatever social media allows for picture uploads. It then can be scanned and reshared by anyone who sees it!\r\n                        </p>\r\n\r\n\r\n\r\n                    <h1 className=\"aboutush\">What are the goals?</h1>\r\n                        <p className=\"aboutusp\">\r\n                        The user goes onto a list creator and inputs the links to resources they want to be present when someone scans\r\n                        their QR code. Then they review their final list and generate a QR code if it looks good! They then can share this QR code\r\n                        to whatever social media allows for picture uploads. It then can be scanned and reshared by anyone who sees it!\r\n                        </p>\r\n\r\n\r\n                    <h1 className=\"aboutush\">Flexibility</h1>\r\n                        <p className=\"aboutusp\">\r\n                        We take pride in the flexibility of this program and hope that not only can it be used for sharing causes and movements \r\n                        but also to organize people and events beyond just social justice. The QR code could contain information about an event or\r\n                        even just a list of readings or resources on a cool topic or idea. Shareability is endlessly applicable.   \r\n                        </p>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default AboutUs;","C:\\Users\\danil\\Documents\\GitHub\\PIXL_remote_host\\src\\components\\NavBar.jsx",["65"],[],"import React, {Component} from \"react\";\r\n\r\nclass NavBar extends Component {\r\n    state = {  } \r\n    render() { \r\n        return (\r\n        <div> \r\n\r\n            <header id = 'navbar'>\r\n            <ul> \r\n                <li>\r\n                    <a className=\"click\" href=\"/PIXL_remote_host/aboutUs\" target= \"_blank\">About Us</a>\r\n                    \r\n                </li>\r\n                <li>\r\n                    <a className=\"click\" href=\"https://github.com/mn-spawn/PIXL\" target= \"_blank\" > GitHub</a>\r\n                </li>\r\n                <li>\r\n                  <a className=\"click\" href=\"/PIXL_remote_host\" target= \"_blank\" > Intro Page</a>\r\n                </li>\r\n            </ul>\r\n            </header>\r\n        </div>\r\n\r\n        );\r\n    }\r\n}\r\n \r\nexport default NavBar;","C:\\Users\\danil\\Documents\\GitHub\\PIXL_remote_host\\src\\components\\IntroPage.jsx",[],[],"C:\\Users\\danil\\Documents\\GitHub\\PIXL_remote_host\\src\\components\\Todo.js",["66","67","68","69"],[],"/* crediting github: briancodex for to do functionality used his components\r\nfrom https://github.com/briancodex/react-todo-app-v1 for to do section of this\r\nreact app */\r\n\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport TodoForm from './TodoForm';\r\nimport React, {useState} from \"react\";\r\n\r\nconst Todo = ({todos, completeTodo, updateTodo }) => {\r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    value: ''\r\n  });\r\n\r\n  const submitUpdate = value => {\r\n    updateTodo(edit.id, value);\r\n    setEdit({\r\n      id: null,\r\n      value: ''\r\n    });\r\n  };\r\n\r\n  if (edit.id) {\r\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\r\n  }\r\n\r\n  return todos.map((todo, index) => (\r\n    <div\r\n      className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\r\n      key={index}\r\n    >\r\n      <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n        {todo.text}\r\n      </div>\r\n    </div>\r\n  ));\r\n};\r\n\r\nexport default Todo;\r\n","C:\\Users\\danil\\Documents\\GitHub\\PIXL_remote_host\\src\\components\\TodoForm.js",[],[],{"ruleId":"70","severity":1,"message":"71","line":9,"column":8,"nodeType":"72","messageId":"73","endLine":9,"endColumn":19},{"ruleId":"70","severity":1,"message":"74","line":15,"column":9,"nodeType":"72","messageId":"73","endLine":15,"endColumn":17},{"ruleId":"70","severity":1,"message":"75","line":44,"column":9,"nodeType":"72","messageId":"73","endLine":44,"endColumn":21},{"ruleId":"70","severity":1,"message":"76","line":2,"column":8,"nodeType":"72","messageId":"73","endLine":2,"endColumn":16},{"ruleId":"77","severity":1,"message":"78","line":39,"column":13,"nodeType":"79","endLine":39,"endColumn":53},{"ruleId":"70","severity":1,"message":"80","line":2,"column":8,"nodeType":"72","messageId":"73","endLine":2,"endColumn":14},{"ruleId":"70","severity":1,"message":"81","line":4,"column":7,"nodeType":"72","messageId":"73","endLine":4,"endColumn":14},{"ruleId":"82","severity":1,"message":"83","line":4,"column":18,"nodeType":"84","messageId":"85","endLine":4,"endColumn":79},{"ruleId":"86","severity":1,"message":"87","line":16,"column":21,"nodeType":"79","messageId":"88","endLine":16,"endColumn":100,"fix":"89"},{"ruleId":"70","severity":1,"message":"90","line":5,"column":8,"nodeType":"72","messageId":"73","endLine":5,"endColumn":16},{"ruleId":"70","severity":1,"message":"91","line":6,"column":27,"nodeType":"72","messageId":"73","endLine":6,"endColumn":33},{"ruleId":"70","severity":1,"message":"92","line":6,"column":35,"nodeType":"72","messageId":"73","endLine":6,"endColumn":40},{"ruleId":"70","severity":1,"message":"93","line":6,"column":42,"nodeType":"72","messageId":"73","endLine":6,"endColumn":46},"no-unused-vars","'ReviewState' is defined but never used.","Identifier","unusedVar","'navigate' is assigned a value but never used.","'openInNewTab' is assigned a value but never used.","'TodoList' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'toggle' is defined but never used.","'options' is assigned a value but never used.","no-sparse-arrays","Unexpected comma in middle of array.","ArrayExpression","unexpectedSparseArray","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"94","text":"95"},"'ReactDOM' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.",[495,495]," rel=\"noreferrer\""]